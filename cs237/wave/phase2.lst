WARM Assembly of phase2.as                                              Page 1

Line [ Addr ]
0001           ; Phase 2 test.                 -*- mode: asm; compile-command: "
0002           ; (c) 2010 duane bailey
0003           ; This demonstrates most of instructions and modes needed for pha
0004           ; Enjoy :-).
0005           
0006           ; test 0: check output, and data direct (assume r0 is 0 and condi
0007 [0x0000]: zero:   adc     r0,r0,pc         
     [0x0000]: 0x008043c0 = 0b00000000100000000100001111000000
0008 [0x0001]:         swi     #SysPutNum
     [0x0001]: 0x06800401 = 0b00000110100000000000010000000001
0009           ; text 0.5: check char output, and immediate data
0010 [0x0002]:         mov     r0,#'\n
     [0x0002]: 0x05800205 = 0b00000101100000000000001000000101
0011 [0x0003]:         swi     #SysPutChar
     [0x0003]: 0x06800003 = 0b00000110100000000000000000000011
0012           ; test 1: check immediate data  
0013 [0x0004]: one:    mov     r1,#1
     [0x0004]: 0x05880001 = 0b00000101100010000000000000000001
0014 [0x0005]:         mov     r0,r1
     [0x0005]: 0x05804040 = 0b00000101100000000100000001000000
0015 [0x0006]:         swi     #SysPutNum
     [0x0006]: 0x06800401 = 0b00000110100000000000010000000001
0016 [0x0007]:         mov     r0,#'\n
     [0x0007]: 0x05800205 = 0b00000101100000000000001000000101
0017 [0x0008]:         swi     #SysPutChar
     [0x0008]: 0x06800003 = 0b00000110100000000000000000000011
0018           ; test 2: add instruction
0019 [0x0009]: two:    mov     r1,#1
     [0x0009]: 0x05880001 = 0b00000101100010000000000000000001
0020 [0x000a]:         mov     r2,r1
     [0x000a]: 0x05904040 = 0b00000101100100000100000001000000
0021 [0x000b]:         add     r0,r1,r2
     [0x000b]: 0x0000c080 = 0b00000000000000001100000010000000
0022 [0x000c]:         swi     #SysPutNum
     [0x000c]: 0x06800401 = 0b00000110100000000000010000000001
0023 [0x000d]:         mov     r0,#'\n
     [0x000d]: 0x05800205 = 0b00000101100000000000001000000101
0024 [0x000e]:         swi     #SysPutChar
     [0x000e]: 0x06800003 = 0b00000110100000000000000000000011
0025           ; test 3: lsl immediate, nontrivial
0026 [0x000f]: three:  mov     r0,#1
     [0x000f]: 0x05800001 = 0b00000101100000000000000000000001
0027 [0x0010]:         add     r0,r0,r0,lsl #1
     [0x0010]: 0x00004001 = 0b00000000000000000100000000000001
0028 [0x0011]:         swi     #SysPutNum
     [0x0011]: 0x06800401 = 0b00000110100000000000010000000001
0029 [0x0012]:         mov     r0,#'\n
     [0x0012]: 0x05800205 = 0b00000101100000000000001000000101
0030 [0x0013]:         swi     #SysPutChar
     [0x0013]: 0x06800003 = 0b00000110100000000000000000000011
0031           ; test 4: div instructions, immediate encoding
0032 [0x0014]: four:   mov     r1,#4096
     [0x0014]: 0x05881801 = 0b00000101100010000001100000000001
0033 [0x0015]:         div     r0,r1,#1024
     [0x0015]: 0x05009401 = 0b00000101000000001001010000000001
0034 [0x0016]:         swi     #SysPutNum
     [0x0016]: 0x06800401 = 0b00000110100000000000010000000001
0035 [0x0017]:         mov     r0,#'\n
     [0x0017]: 0x05800205 = 0b00000101100000000000001000000101
0036 [0x0018]:         swi     #SysPutChar
WARM Assembly of phase2.as                                              Page 2

Line [ Addr ]
     [0x0018]: 0x06800003 = 0b00000110100000000000000000000011
0037           ; test 5: mul, mvn instructions
0038 [0x0019]: five:   mvn     r1,#5           ; test of move inverted
     [0x0019]: 0x06080005 = 0b00000110000010000000000000000101
0039 [0x001a]:         add     r2,r1,#1
     [0x001a]: 0x00108001 = 0b00000000000100001000000000000001
0040 [0x001b]:         mvn     r3,#0
     [0x001b]: 0x06180000 = 0b00000110000110000000000000000000
0041 [0x001c]:         mul     r0,r2,r3
     [0x001c]: 0x040140c0 = 0b00000100000000010100000011000000
0042 [0x001d]:         swi     #SysPutNum
     [0x001d]: 0x06800401 = 0b00000110100000000000010000000001
0043 [0x001e]:         mov     r0,#'\n
     [0x001e]: 0x05800205 = 0b00000101100000000000001000000101
0044 [0x001f]:         swi     #SysPutChar
     [0x001f]: 0x06800003 = 0b00000110100000000000000000000011
0045           ; test 6: mla instruction
0046 [0x0020]: six:    mvn     r1,#4           ; r1 has -5
     [0x0020]: 0x06080401 = 0b00000110000010000000010000000001
0047 [0x0021]:         mvn     r2,#0           ; r2 has -1
     [0x0021]: 0x06100000 = 0b00000110000100000000000000000000
0048 [0x0022]:         mov     r3,#1           ; r3 has 1
     [0x0022]: 0x05980001 = 0b00000101100110000000000000000001
0049 [0x0023]:         mla     r0,r3,r2,r1     ; r0 has 6
     [0x0023]: 0x0481e081 = 0b00000100100000011110000010000001
0050 [0x0024]:         swi     #SysPutNum
     [0x0024]: 0x06800401 = 0b00000110100000000000010000000001
0051 [0x0025]:         mov     r0,#'\n
     [0x0025]: 0x05800205 = 0b00000101100000000000001000000101
0052 [0x0026]:         swi     #SysPutChar
     [0x0026]: 0x06800003 = 0b00000110100000000000000000000011
0053           ; test 7: shifting instructions
0054 [0x0027]: seven:  mov     r1,sp,lsl #12
     [0x0027]: 0x0588434c = 0b00000101100010000100001101001100
0055 [0x0028]:         mov     r1,r1,asr #12
     [0x0028]: 0x0588484c = 0b00000101100010000100100001001100
0056 [0x0029]:         mov     r2,#29
     [0x0029]: 0x0590001d = 0b00000101100100000000000000011101
0057 [0x002a]:         mov     r0,r1,lsr r2
     [0x002a]: 0x05805442 = 0b00000101100000000101010001000010
0058 [0x002b]:         swi     #SysPutNum
     [0x002b]: 0x06800401 = 0b00000110100000000000010000000001
0059 [0x002c]:         mov     r0,#'\n
     [0x002c]: 0x05800205 = 0b00000101100000000000001000000101
0060 [0x002d]:         swi     #SysPutChar
     [0x002d]: 0x06800003 = 0b00000110100000000000000000000011
0061           ; test 8: exercise the registers
0062 [0x002e]: eight:  mov     r1,#1
     [0x002e]: 0x05880001 = 0b00000101100010000000000000000001
0063 [0x002f]:         mvn     r2,#1
     [0x002f]: 0x06100001 = 0b00000110000100000000000000000001
0064 [0x0030]:         mov     r3,r1,ror #31
     [0x0030]: 0x05984c5f = 0b00000101100110000100110001011111
0065 [0x0031]:         mvn     r4,#2
     [0x0031]: 0x06200201 = 0b00000110001000000000001000000001
0066 [0x0032]:         mov     r5,#3
     [0x0032]: 0x05a80003 = 0b00000101101010000000000000000011
0067 [0x0033]:         mvn     r6,#3
     [0x0033]: 0x06300003 = 0b00000110001100000000000000000011
0068 [0x0034]:         mov     r7,#4
WARM Assembly of phase2.as                                              Page 3

Line [ Addr ]
     [0x0034]: 0x05b80401 = 0b00000101101110000000010000000001
0069 [0x0035]:         mvn     r8,#4
     [0x0035]: 0x06400401 = 0b00000110010000000000010000000001
0070 [0x0036]:         mov     r9,#5
     [0x0036]: 0x05c80005 = 0b00000101110010000000000000000101
0071 [0x0037]:         mvn     r10,#5
     [0x0037]: 0x06500005 = 0b00000110010100000000000000000101
0072 [0x0038]:         mov     r11,#6
     [0x0038]: 0x05d80203 = 0b00000101110110000000001000000011
0073 [0x0039]:         mvn     r12,#6
     [0x0039]: 0x06600203 = 0b00000110011000000000001000000011
0074 [0x003a]:         add     r0,r1,r2
     [0x003a]: 0x0000c080 = 0b00000000000000001100000010000000
0075 [0x003b]:         add     r0,r0,r3
     [0x003b]: 0x000040c0 = 0b00000000000000000100000011000000
0076 [0x003c]:         add     r0,r0,r4
     [0x003c]: 0x00004100 = 0b00000000000000000100000100000000
0077 [0x003d]:         add     r0,r0,r5
     [0x003d]: 0x00004140 = 0b00000000000000000100000101000000
0078 [0x003e]:         add     r0,r0,r6
     [0x003e]: 0x00004180 = 0b00000000000000000100000110000000
0079 [0x003f]:         add     r0,r1,r7
     [0x003f]: 0x0000c1c0 = 0b00000000000000001100000111000000
0080 [0x0040]:         add     r0,r0,r8
     [0x0040]: 0x00004200 = 0b00000000000000000100001000000000
0081 [0x0041]:         add     r0,r0,r9
     [0x0041]: 0x00004240 = 0b00000000000000000100001001000000
0082 [0x0042]:         add     r0,r0,r10
     [0x0042]: 0x00004280 = 0b00000000000000000100001010000000
0083 [0x0043]:         add     r0,r0,r11
     [0x0043]: 0x000042c0 = 0b00000000000000000100001011000000
0084 [0x0044]:         add     r0,r0,r12
     [0x0044]: 0x00004300 = 0b00000000000000000100001100000000
0085 [0x0045]:         mvn     r0,r0
     [0x0045]: 0x06004000 = 0b00000110000000000100000000000000
0086 [0x0046]:         mov     r0,r0,lsl r5
     [0x0046]: 0x05805005 = 0b00000101100000000101000000000101
0087 [0x0047]:         swi     #SysPutNum
     [0x0047]: 0x06800401 = 0b00000110100000000000010000000001
0088 [0x0048]:         mov     r0,#'\n
     [0x0048]: 0x05800205 = 0b00000101100000000000001000000101
0089 [0x0049]:         swi     #SysPutChar
     [0x0049]: 0x06800003 = 0b00000110100000000000000000000011
0090           ; test 9: Some logic.  Or not.
0091 [0x004a]: nine:   mov     r1,sp
     [0x004a]: 0x05884340 = 0b00000101100010000100001101000000
0092 [0x004b]:         and     r2,r1,#0b1111
     [0x004b]: 0x0310800f = 0b00000011000100001000000000001111
0093 [0x004c]:         eor     r3,r2,#0b0111
     [0x004c]: 0x02190007 = 0b00000010000110010000000000000111
0094 [0x004d]:         orr     r0,r3,#1
     [0x004d]: 0x02818001 = 0b00000010100000011000000000000001
0095 [0x004e]:         swi     #SysPutNum
     [0x004e]: 0x06800401 = 0b00000110100000000000010000000001
0096 [0x004f]:         mov     r0,#'\n
     [0x004f]: 0x05800205 = 0b00000101100000000000001000000101
0097 [0x0050]:         swi     #SysPutChar
     [0x0050]: 0x06800003 = 0b00000110100000000000000000000011
0098 [0x0051]:         mov     r0,#'D
     [0x0051]: 0x05800411 = 0b00000101100000000000010000010001
WARM Assembly of phase2.as                                              Page 4

Line [ Addr ]
0099 [0x0052]:         swi     #SysPutChar
     [0x0052]: 0x06800003 = 0b00000110100000000000000000000011
0100 [0x0053]:         mov     r0,#'o
     [0x0053]: 0x0580006f = 0b00000101100000000000000001101111
0101 [0x0054]:         swi     #SysPutChar
     [0x0054]: 0x06800003 = 0b00000110100000000000000000000011
0102 [0x0055]:         mov     r0,#'n
     [0x0055]: 0x05800237 = 0b00000101100000000000001000110111
0103 [0x0056]:         swi     #SysPutChar
     [0x0056]: 0x06800003 = 0b00000110100000000000000000000011
0104 [0x0057]:         mov     r0,#'e
     [0x0057]: 0x05800065 = 0b00000101100000000000000001100101
0105 [0x0058]:         swi     #SysPutChar
     [0x0058]: 0x06800003 = 0b00000110100000000000000000000011
0106 [0x0059]:         mov     r0,#'!
     [0x0059]: 0x05800021 = 0b00000101100000000000000000100001
0107 [0x005a]:         swi     #SysPutChar
     [0x005a]: 0x06800003 = 0b00000110100000000000000000000011
0108 [0x005b]:         mov     r0,#'\n
     [0x005b]: 0x05800205 = 0b00000101100000000000001000000101
0109 [0x005c]:         swi     #SysPutChar
     [0x005c]: 0x06800003 = 0b00000110100000000000000000000011
0110 [0x005d]: heaven: swi     #SysHalt
     [0x005d]: 0x06800000 = 0b00000110100000000000000000000000

-------------------------------------------------------------------------------
Symbols defined:
       eight=46             five=25             four=20           heaven=93    
        nine=74              one=4             seven=39              six=32    
       three=15              two=9              zero=0      
-------------------------------------------------------------------------------
Assembled 94 instructions at 1132.53 instructions per second.
